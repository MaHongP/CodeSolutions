
(define (element-of-set? x set)
  (cond ((null? set) #f)
        ((equal? x (car set)) #t)
        (else (element-of-set? x (cdr set)))))
(define (adjoin-set x set)
  (if (element-of-set? x set)
      set
      (append  set (list x))))

;Test Unit
(element-of-set? 'x (list 'y 'z 'x))
(adjoin-set 'x '(y z ))